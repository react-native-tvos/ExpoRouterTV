diff --git a/node_modules/react-native/React/Base/RCTRootView.h b/node_modules/react-native/React/Base/RCTRootView.h
index 7634441..febac41 100644
--- a/node_modules/react-native/React/Base/RCTRootView.h
+++ b/node_modules/react-native/React/Base/RCTRootView.h
@@ -11,6 +11,10 @@
 #import <React/RCTBridgeModule.h>
 #import <React/RCTEventDispatcherProtocol.h>
 
+#if TARGET_OS_TV
+#import "RCTTVRemoteSelectHandler.h"
+#endif
+
 extern NSString *const RCTTVEnableMenuKeyNotification;
 extern NSString *const RCTTVDisableMenuKeyNotification;
 
@@ -51,8 +55,11 @@ extern
  * like any ordinary UIView. You can have multiple RCTRootViews on screen at
  * once, all controlled by the same JavaScript application.
  */
+#if TARGET_OS_TV
+@interface RCTRootView : UIView <RCTTVRemoteSelectHandlerDelegate>
+#else
 @interface RCTRootView : UIView
-
+#endif
 /**
  * - Designated initializer -
  */
diff --git a/node_modules/react-native/React/Base/RCTRootView.m b/node_modules/react-native/React/Base/RCTRootView.m
index df273bc..e85546e 100644
--- a/node_modules/react-native/React/Base/RCTRootView.m
+++ b/node_modules/react-native/React/Base/RCTRootView.m
@@ -31,6 +31,8 @@
 #if TARGET_OS_TV
 #import "RCTTVNavigationEventEmitter.h"
 #import "RCTTVRemoteHandler.h"
+#import "RCTTVRemoteSelectHandler.h"
+#import <React/RCTTVNavigationEventNotification.h>
 #endif
 
 #if RCT_DEV
@@ -98,6 +100,7 @@ NSString *const RCTContentDidAppearNotification = @"RCTContentDidAppearNotificat
 #endif
       
     self.tvRemoteHandler = [[RCTTVRemoteHandler alloc] initWithView:self];
+    self.tvRemoteSelectHandler = [[RCTTVRemoteSelectHandler alloc] initWithView:self];
 #endif
 
     [self showLoadingView];
@@ -424,10 +427,45 @@ RCT_NOT_IMPLEMENTED(-(instancetype)initWithCoder : (NSCoder *)aDecoder)
 {
 #if TARGET_OS_TV
   self.tvRemoteHandler = nil;
+  self.tvRemoteSelectHandler = nil;
 #endif
   [_contentView invalidate];
 }
 
+#if TARGET_OS_TV
+
+#pragma mark -
+#pragma mark RCTTVRemoteSelectHandlerDelegate methods
+
+- (void)animatePressIn {
+}
+
+- (void)animatePressOut { 
+}
+
+- (void)emitPressInEvent { 
+}
+
+- (void)emitPressOutEvent { 
+}
+
+- (void)sendSelectNotification
+{
+    [[NSNotificationCenter defaultCenter] postNavigationPressEventWithType:RCTTVRemoteEventSelect keyAction:RCTTVRemoteEventKeyActionUp tag:self.reactTag target:self.reactTag];
+}
+
+- (void)sendLongSelectBeganNotification
+{
+    [[NSNotificationCenter defaultCenter] postNavigationPressEventWithType:RCTTVRemoteEventLongSelect keyAction:RCTTVRemoteEventKeyActionDown tag:self.reactTag target:self.reactTag];
+}
+
+- (void)sendLongSelectEndedNotification
+{
+    [[NSNotificationCenter defaultCenter] postNavigationPressEventWithType:RCTTVRemoteEventLongSelect keyAction:RCTTVRemoteEventKeyActionUp tag:self.reactTag target:self.reactTag];
+}
+
+#endif
+
 @end
 
 @implementation RCTRootView (Deprecated)
diff --git a/node_modules/react-native/React/Base/RCTRootViewInternal.h b/node_modules/react-native/React/Base/RCTRootViewInternal.h
index 93ee791..c7d13e0 100644
--- a/node_modules/react-native/React/Base/RCTRootViewInternal.h
+++ b/node_modules/react-native/React/Base/RCTRootViewInternal.h
@@ -26,6 +26,7 @@
  */
 #if TARGET_OS_TV
 @property (nonatomic, strong) RCTTVRemoteHandler *tvRemoteHandler;
+@property (nonatomic, strong) RCTTVRemoteSelectHandler *tvRemoteSelectHandler;
 @property (nonatomic, weak) UIView *reactPreferredFocusedView;
 @property (nonatomic, copy, nullable) NSArray<id<UIFocusEnvironment>> *reactPreferredFocusEnvironments;
 #endif
diff --git a/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m b/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m
index 07f7189..8245419 100644
--- a/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m
+++ b/node_modules/react-native/React/Base/RCTTVRemoteSelectHandler.m
@@ -36,7 +36,7 @@
 
 // Press recognizer should allow long press recognizer to work (but not the reverse)
 - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
-  return gestureRecognizer == _pressRecognizer;
+  return gestureRecognizer == self.pressRecognizer && otherGestureRecognizer == self.longPressRecognizer;
 }
 
 #pragma mark -
@@ -54,6 +54,7 @@
   UILongPressGestureRecognizer *longPressRecognizer = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(handleLongPress:)];
   longPressRecognizer.allowedPressTypes = @[ @(UIPressTypeSelect) ];
   longPressRecognizer.minimumPressDuration = 0.5;
+  longPressRecognizer.delegate = self;
 
   [self.view addGestureRecognizer:longPressRecognizer];
   self.longPressRecognizer = longPressRecognizer;
diff --git a/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.h b/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.h
index 233be24..e5f1955 100644
--- a/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.h
+++ b/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.h
@@ -14,6 +14,7 @@
 
 #if TARGET_OS_TV
 #import <React/RCTTVRemoteHandler.h>
+#import <React/RCTTVRemoteSelectHandler.h>
 #endif
 
 NS_ASSUME_NONNULL_BEGIN
@@ -25,7 +26,11 @@ NS_ASSUME_NONNULL_BEGIN
  *
  * WARNING: In the future, RCTRootView will be deprecated in favor of RCTSurfaceHostingView.
  */
+#if TARGET_OS_TV
+@interface RCTSurfaceHostingProxyRootView : RCTSurfaceHostingView <RCTTVRemoteSelectHandlerDelegate>
+#else
 @interface RCTSurfaceHostingProxyRootView : RCTSurfaceHostingView
+#endif
 
 #pragma mark RCTRootView compatibility - keep these sync'ed with RCTRootView.h
 
@@ -44,6 +49,7 @@ NS_ASSUME_NONNULL_BEGIN
 @property (nonatomic, assign) CGSize minimumSize;
 #if TARGET_OS_TV
 @property (nonatomic, strong, nullable) RCTTVRemoteHandler *tvRemoteHandler;
+@property (nonatomic, strong, nullable) RCTTVRemoteSelectHandler *tvRemoteSelectHandler;
 @property (nonatomic, weak, nullable) UIView *reactPreferredFocusedView;
 @property (nonatomic, copy, nullable) NSArray<id<UIFocusEnvironment>> *reactPreferredFocusEnvironments;
 #endif
diff --git a/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.mm b/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.mm
index c2cfe7d..33863ea 100644
--- a/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.mm
+++ b/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingProxyRootView.mm
@@ -20,6 +20,10 @@
 #import "RCTSurface.h"
 #import "UIView+React.h"
 
+#if TARGET_OS_TV
+#import <React/RCTTVNavigationEventNotification.h>
+#endif
+
 static RCTSurfaceSizeMeasureMode convertToSurfaceSizeMeasureMode(RCTRootViewSizeFlexibility sizeFlexibility)
 {
   switch (sizeFlexibility) {
@@ -61,9 +65,11 @@ RCT_NOT_IMPLEMENTED(-(instancetype)initWithFrame : (CGRect)frame)
 RCT_NOT_IMPLEMENTED(-(instancetype)initWithCoder : (NSCoder *)aDecoder)
 
 #if TARGET_OS_TV
+
 - (void)dealloc
 {
   self.tvRemoteHandler = nil;
+  self.tvRemoteSelectHandler = nil;
 }
 
 - (NSArray<id<UIFocusEnvironment>> *)preferredFocusEnvironments {
@@ -78,6 +84,36 @@ RCT_NOT_IMPLEMENTED(-(instancetype)initWithCoder : (NSCoder *)aDecoder)
   }
   return [super preferredFocusEnvironments];
 }
+
+#pragma mark -
+#pragma mark RCTTVRemoteSelectHandlerDelegate methods
+
+- (void)animatePressIn {
+}
+
+- (void)animatePressOut {
+}
+
+- (void)emitPressInEvent {
+}
+
+- (void)emitPressOutEvent {
+}
+
+- (void)sendSelectNotification
+{
+    [[NSNotificationCenter defaultCenter] postNavigationPressEventWithType:RCTTVRemoteEventSelect keyAction:RCTTVRemoteEventKeyActionUp tag:self.reactTag target:self.reactTag];
+}
+
+- (void)sendLongSelectBeganNotification
+{
+    [[NSNotificationCenter defaultCenter] postNavigationPressEventWithType:RCTTVRemoteEventLongSelect keyAction:RCTTVRemoteEventKeyActionDown tag:self.reactTag target:self.reactTag];
+}
+
+- (void)sendLongSelectEndedNotification
+{
+    [[NSNotificationCenter defaultCenter] postNavigationPressEventWithType:RCTTVRemoteEventLongSelect keyAction:RCTTVRemoteEventKeyActionUp tag:self.reactTag target:self.reactTag];
+}
 #endif
 
 
@@ -145,6 +181,7 @@ RCT_NOT_IMPLEMENTED(-(instancetype)initWithCoder : (NSCoder *)aDecoder)
     dispatch_async(dispatch_get_main_queue(), ^{
 #if TARGET_OS_TV
      self.tvRemoteHandler = [[RCTTVRemoteHandler alloc] initWithView:[self contentView]];
+     self.tvRemoteSelectHandler = [[RCTTVRemoteSelectHandler alloc] initWithView:self];
 #endif
     });
   }
